// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bcor_open
Rcpp::List bcor_open(std::string filename, bool read_header);
RcppExport SEXP _rbcor_bcor_open(SEXP filenameSEXP, SEXP read_headerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< bool >::type read_header(read_headerSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_open(filename, read_header));
    return rcpp_result_gen;
END_RCPP
}
// bcor_get_meta
Rcpp::DataFrame bcor_get_meta(SEXP bcor_ptr);
RcppExport SEXP _rbcor_bcor_get_meta(SEXP bcor_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_get_meta(bcor_ptr));
    return rcpp_result_gen;
END_RCPP
}
// bcor_read_corr
arma::mat bcor_read_corr(SEXP bcor_ptr, Rcpp::Nullable<Rcpp::IntegerVector> snps);
RcppExport SEXP _rbcor_bcor_read_corr(SEXP bcor_ptrSEXP, SEXP snpsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type snps(snpsSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_read_corr(bcor_ptr, snps));
    return rcpp_result_gen;
END_RCPP
}
// bcor_read_corr2
arma::mat bcor_read_corr2(SEXP bcor_ptr, Rcpp::IntegerVector snps1, Rcpp::IntegerVector snps2);
RcppExport SEXP _rbcor_bcor_read_corr2(SEXP bcor_ptrSEXP, SEXP snps1SEXP, SEXP snps2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type snps1(snps1SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type snps2(snps2SEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_read_corr2(bcor_ptr, snps1, snps2));
    return rcpp_result_gen;
END_RCPP
}
// bcor_read_corr_sparse
arma::sp_mat bcor_read_corr_sparse(SEXP bcor_ptr, Rcpp::Nullable<Rcpp::IntegerVector> snps, double threshold);
RcppExport SEXP _rbcor_bcor_read_corr_sparse(SEXP bcor_ptrSEXP, SEXP snpsSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type snps(snpsSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_read_corr_sparse(bcor_ptr, snps, threshold));
    return rcpp_result_gen;
END_RCPP
}
// bcor_read_corr_sparse2
arma::sp_mat bcor_read_corr_sparse2(SEXP bcor_ptr, Rcpp::IntegerVector snps1, Rcpp::IntegerVector snps2, double threshold);
RcppExport SEXP _rbcor_bcor_read_corr_sparse2(SEXP bcor_ptrSEXP, SEXP snps1SEXP, SEXP snps2SEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type snps1(snps1SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type snps2(snps2SEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_read_corr_sparse2(bcor_ptr, snps1, snps2, threshold));
    return rcpp_result_gen;
END_RCPP
}
// bcor_read_corr_packed
Rcpp::S4 bcor_read_corr_packed(SEXP bcor_ptr, Rcpp::Nullable<Rcpp::IntegerVector> snps);
RcppExport SEXP _rbcor_bcor_read_corr_packed(SEXP bcor_ptrSEXP, SEXP snpsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type snps(snpsSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_read_corr_packed(bcor_ptr, snps));
    return rcpp_result_gen;
END_RCPP
}
// bcor_get_diagonal
Rcpp::NumericVector bcor_get_diagonal(SEXP bcor_ptr);
RcppExport SEXP _rbcor_bcor_get_diagonal(SEXP bcor_ptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bcor_ptr(bcor_ptrSEXP);
    rcpp_result_gen = Rcpp::wrap(bcor_get_diagonal(bcor_ptr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rbcor_bcor_open", (DL_FUNC) &_rbcor_bcor_open, 2},
    {"_rbcor_bcor_get_meta", (DL_FUNC) &_rbcor_bcor_get_meta, 1},
    {"_rbcor_bcor_read_corr", (DL_FUNC) &_rbcor_bcor_read_corr, 2},
    {"_rbcor_bcor_read_corr2", (DL_FUNC) &_rbcor_bcor_read_corr2, 3},
    {"_rbcor_bcor_read_corr_sparse", (DL_FUNC) &_rbcor_bcor_read_corr_sparse, 3},
    {"_rbcor_bcor_read_corr_sparse2", (DL_FUNC) &_rbcor_bcor_read_corr_sparse2, 4},
    {"_rbcor_bcor_read_corr_packed", (DL_FUNC) &_rbcor_bcor_read_corr_packed, 2},
    {"_rbcor_bcor_get_diagonal", (DL_FUNC) &_rbcor_bcor_get_diagonal, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rbcor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
